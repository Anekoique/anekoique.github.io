<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>LKL on Anekoique&#39;s Blog</title>
    <link>http://localhost:1313/tags/lkl/</link>
    <description>Recent content in LKL on Anekoique&#39;s Blog</description>
    <generator>Hugo -- 0.150.0</generator>
    <language>en</language>
    <lastBuildDate>Sun, 21 Sep 2025 17:08:45 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/lkl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Basic Mechanism of LKL and UINTR</title>
      <link>http://localhost:1313/posts/lkl_uintr/</link>
      <pubDate>Sun, 21 Sep 2025 17:08:45 +0800</pubDate>
      <guid>http://localhost:1313/posts/lkl_uintr/</guid>
      <description>&lt;h1 id=&#34;lkl&#34;&gt;LKL&lt;/h1&gt;
&lt;h2 id=&#34;mechanism&#34;&gt;Mechanism&lt;/h2&gt;
&lt;div class=&#34;image-container&#34;&gt;&lt;div class=&#34;tech-diagram&#34;&gt;&lt;img src=&#34;http://localhost:1313/images/LKL.png&#34; 
       alt=&#34;mechanism of LKL&#34; 
       class=&#34;img-medium tech-diagram&#34;
       loading=&#34;lazy&#34; /&gt;&lt;/div&gt;&lt;div class=&#34;image-caption&#34;&gt;basic mechanism of LKL&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The Request:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An application makes a request (e.g., read) through LKL&amp;rsquo;s safe, interrupt-based system call API, then sleeps.&lt;/li&gt;
&lt;li&gt;The LKL kernel processes the request and calls out to a native stub (a callback function provided by the application).&lt;/li&gt;
&lt;li&gt;This stub executes the actual I/O operation using the host OS&amp;rsquo;s functions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Responses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the host I/O is finished, the native stub is notified.&lt;/li&gt;
&lt;li&gt;The stub triggers a simulated IRQ back into LKL to signal completion.&lt;/li&gt;
&lt;li&gt;LKL handles this completion and wakes up the original application thread with the data or result.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;application&#34;&gt;Application&lt;/h2&gt;
&lt;p&gt;Target:  reuse the original, high-quality Linux kernel code as a library&lt;/p&gt;
&lt;p&gt;Code：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;arch/lkl&lt;/strong&gt;: 实现内核到用户空间的移植，提供内核运行环境&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;tools/lkl&lt;/strong&gt;: 提供用户接口，封装成库和工具供应用程序使用&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
