<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>OS on Anekoique&#39;s Blog</title>
    <link>http://localhost:1313/tags/os/</link>
    <description>Recent content in OS on Anekoique&#39;s Blog</description>
    <generator>Hugo -- 0.150.0</generator>
    <language>en</language>
    <lastBuildDate>Sun, 21 Sep 2025 17:08:45 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/os/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Basic Mechanism of LKL and UINTR</title>
      <link>http://localhost:1313/posts/lkl_uintr/</link>
      <pubDate>Sun, 21 Sep 2025 17:08:45 +0800</pubDate>
      <guid>http://localhost:1313/posts/lkl_uintr/</guid>
      <description>&lt;h1 id=&#34;lkl&#34;&gt;LKL&lt;/h1&gt;
&lt;h2 id=&#34;mechanism&#34;&gt;Mechanism&lt;/h2&gt;
&lt;div class=&#34;image-container&#34;&gt;&lt;div class=&#34;tech-diagram&#34;&gt;&lt;img src=&#34;http://localhost:1313/images/LKL.png&#34; 
       alt=&#34;mechanism of LKL&#34; 
       class=&#34;img-medium tech-diagram&#34;
       loading=&#34;lazy&#34; /&gt;&lt;/div&gt;&lt;div class=&#34;image-caption&#34;&gt;basic mechanism of LKL&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The Request:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An application makes a request (e.g., read) through LKL&amp;rsquo;s safe, interrupt-based system call API, then sleeps.&lt;/li&gt;
&lt;li&gt;The LKL kernel processes the request and calls out to a native stub (a callback function provided by the application).&lt;/li&gt;
&lt;li&gt;This stub executes the actual I/O operation using the host OS&amp;rsquo;s functions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Responses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the host I/O is finished, the native stub is notified.&lt;/li&gt;
&lt;li&gt;The stub triggers a simulated IRQ back into LKL to signal completion.&lt;/li&gt;
&lt;li&gt;LKL handles this completion and wakes up the original application thread with the data or result.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;application&#34;&gt;Application&lt;/h2&gt;
&lt;p&gt;Target:  reuse the original, high-quality Linux kernel code as a library&lt;/p&gt;
&lt;p&gt;Code：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;arch/lkl&lt;/strong&gt;: 实现内核到用户空间的移植，提供内核运行环境&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;tools/lkl&lt;/strong&gt;: 提供用户接口，封装成库和工具供应用程序使用&lt;/p&gt;</description>
    </item>
    <item>
      <title>MIT6.1810 Lab简记</title>
      <link>http://localhost:1313/posts/mit6.1810/</link>
      <pubDate>Wed, 27 Aug 2025 11:00:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/mit6.1810/</guid>
      <description>&lt;p&gt;the course is the new version of 6.828 and 6.s081（24 fall）&lt;/p&gt;
&lt;div class=&#34;callout callout-important&#34;&gt;
  &lt;div class=&#34;callout-header&#34;&gt;
    &lt;span class=&#34;callout-icon&#34;&gt;&lt;svg width=&#34;16&#34; height=&#34;16&#34; viewBox=&#34;0 0 16 16&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z&#34;/&gt;&lt;/svg&gt;&lt;/span&gt;
    &lt;span class=&#34;callout-title&#34;&gt;IMPORTANT&lt;/span&gt;
  &lt;/div&gt;
  &lt;div class=&#34;callout-content&#34;&gt;
    &lt;p&gt;我们已经在你学长学姐的实验报告中多次看到类似的悔恨: 因为没有及时记录实验心得而在编写实验报告的时候忘记了自己经历趣事的细节. 为了和助教们分享你的各种实验经历, 我们建议你在实验过程中随时记录实验心得, 比如自己踩过的大坑, 或者是调了一周之后才发现的一个弱智bug, 等等.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
